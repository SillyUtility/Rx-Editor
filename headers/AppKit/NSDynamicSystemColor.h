//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <AppKit/NSDynamicNamedColor.h>

@class NSColor;

__attribute__((visibility("hidden")))
@interface NSDynamicSystemColor : NSDynamicNamedColor
{
    NSColor *_tintColor;
}

+ (id)controlAccentColor;
+ (id)_selectionMaterialTintColor;
+ (id)unemphasizedSelectedTextBackgroundColor;
+ (id)unemphasizedSelectedTextColor;
+ (id)selectedTextColor;
+ (id)selectedMenuItemColor;
+ (id)alternateSelectedControlTextColor;
+ (id)_alternateDisabledSelectedControlTextColor;
+ (id)alternateSecondarySelectedControlColor;
+ (id)selectedControlColor;
+ (id)selectedTextBackgroundColor;
+ (id)alternateSelectedControlColor;
+ (id)controlAlternatingRowColor;
+ (id)graphiteSelectedTextBackgroundColor;
+ (id)textCorrectionIndicatorColor;
+ (id)textGrammarIndicatorColor;
+ (id)textSpellingIndicatorColor;
+ (id)detailAccentColor;
+ (id)keyboardFocusIndicatorColor;
+ (id)alternatingContentBackgroundColor;
+ (id)unemphasizedSelectedContentBackgroundColor;
+ (id)selectedContentTextColor;
+ (id)selectedContentBackgroundColor;
+ (id)contentBackgroundColor;
+ (id)separatorColor;
+ (id)containerBorderColor;
+ (id)findHighlightColor;
+ (id)springLoadedOverlayColor;
+ (id)linkColor;
+ (id)placeholderTextColor;
+ (id)controlAccentNoColor;
+ (id)controlAccentSilverColor;
+ (id)controlAccentRoseGoldColor;
+ (id)controlAccentGoldColor;
+ (id)controlAccentSpaceGrayColor;
+ (id)controlAccentPinkColor;
+ (id)controlAccentPurpleColor;
+ (id)controlAccentBlueColor;
+ (id)controlAccentGreenColor;
+ (id)controlAccentYellowColor;
+ (id)controlAccentOrangeColor;
+ (id)controlAccentRedColor;
+ (id)alternateSelectionGraphiteColor;
+ (id)alternateSelectionBlueColor;
+ (id)systemIndigoColor;
+ (id)systemTealColor;
+ (id)systemMintColor;
+ (id)systemGrayColor;
+ (id)systemPurpleColor;
+ (id)systemPinkColor;
+ (id)systemBrownColor;
+ (id)systemYellowColor;
+ (id)systemOrangeColor;
+ (id)systemBlueColor;
+ (id)systemGreenColor;
+ (id)systemRedColor;
+ (id)quaternaryLabelColor;
+ (id)tertiaryLabelColor;
+ (id)secondaryLabelColor;
+ (id)labelColor;
+ (id)secondarySelectedControlColor;
+ (id)clearControlTintColor;
+ (id)graphiteControlTintColor;
+ (id)blueControlTintColor;
+ (id)windowBackgroundColor;
+ (id)selectedHeaderTextColor;
+ (id)headerTextColor;
+ (id)thinSplitViewDividerColor;
+ (id)headerColor;
+ (id)progressIndicatorColor;
+ (id)selectedMenuItemTextColor;
+ (id)windowFrameTextColor;
+ (id)windowFrameColor;
+ (id)shadowColor;
+ (id)highlightColor;
+ (id)selectedKnobColor;
+ (id)knobColor;
+ (id)toolTipColor;
+ (id)toolTipTextColor;
+ (id)gridColor;
+ (id)scrollBarColor;
+ (id)disabledControlTextColor;
+ (id)selectedControlTextColor;
+ (id)controlTextColor;
+ (id)textBackgroundColor;
+ (id)textColor;
+ (id)controlLightHighlightColor;
+ (id)controlHighlightColor;
+ (id)underPageBackgroundColor;
+ (id)controlBackgroundColor;
+ (id)controlColor;
+ (id)controlDarkShadowColor;
+ (id)controlShadowColor;
+ (void)recacheAllColors:(id)arg1;
+ (void)initialize;
- (BOOL)retainWeakReference;
- (BOOL)allowsWeakReference;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (unsigned long long)retainCount;
- (id)retain;
- (oneway void)release;
- (void)encodeWithCoder:(id)arg1;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)resolvedColor;
- (struct CGColor *)CGColor;
- (void)recacheColor;
- (BOOL)_getSemanticallyEquivalentVisualEffectMaterial:(long long *)arg1;
- (id)initWithSelector:(SEL)arg1 tintedWithColor:(id)arg2;
- (id)initWithSelector:(SEL)arg1;
- (Class)classForCoder;

@end

