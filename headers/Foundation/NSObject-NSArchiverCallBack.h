//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSClassDescription, NSDictionary, NSString;

@interface NSObject (NSArchiverCallBack)
+ (BOOL)useStoredAccessor;
+ (const char *)_localClassNameForClass;
+ (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
+ (struct objc_method_description *)instanceMethodDescriptionForSelector:(SEL)arg1;
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (BOOL)accessInstanceVariablesDirectly;
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createMutableOrderedSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)_keysForValuesAffectingValueForKey:(id)arg1;
+ (void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;
+ (BOOL)_shouldAddObservationForwardersForKey:(id)arg1;
+ (id)classFallbacksForKeyedArchiver;
+ (Class)classForKeyedUnarchiver;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
+ (id)_scriptingValueOfValueType:(id)arg1 withDescriptor:(id)arg2;
+ (id)_scriptingValueOfObjectType:(id)arg1 withDescriptor:(id)arg2;
+ (id)_scriptingValueOfComplexType:(id)arg1 withDescriptor:(id)arg2;
+ (id)_scriptingValueOfOneOfAlternativeTypes:(id)arg1 withDescriptor:(id)arg2;
+ (id)_scriptingEnumeratorOfType:(id)arg1 withDescriptor:(id)arg2;
+ (SEL)_selectorToGetValueWithUniqueIDForKey:(id)arg1;
+ (SEL)_selectorToGetValueWithNameForKey:(id)arg1;
+ (void)flushClassKeyBindings;
+ (void)flushAllKeyBindings;
+ (id)replacementObjectForPortCoder:(id)arg1;
- (id)replacementObjectForArchiver:(id)arg1;
- (Class)classForArchiver;
- (id)inverseForRelationshipKey:(id)arg1;
@property(readonly, copy) NSArray *toManyRelationshipKeys;
@property(readonly, copy) NSArray *toOneRelationshipKeys;
@property(readonly, copy) NSArray *attributeKeys;
@property(readonly, copy) NSClassDescription *classDescription;
- (unsigned long long)_scriptingCountNonrecursively;
- (unsigned long long)_scriptingCountOfValueForKey:(id)arg1;
- (unsigned long long)_scriptingCount;
- (void)_scriptingRemoveValueForSpecifier:(id)arg1;
- (id)createKeyValueBindingForKey:(id)arg1 typeMask:(unsigned long long)arg2;
- (id)_createKeyValueBindingForKey:(id)arg1 name:(const char *)arg2 bindingType:(unsigned long long)arg3;
- (id)keyValueBindingForKey:(id)arg1 typeMask:(unsigned long long)arg2;
- (void)takeStoredValue:(id)arg1 forKey:(id)arg2;
- (void)takeValue:(id)arg1 forKey:(id)arg2;
- (id)storedValueForKey:(id)arg1;
- (id)_oldValueForKey:(id)arg1;
- (void)unableToSetNilForKey:(id)arg1;
- (void)handleTakeValue:(id)arg1 forUnboundKey:(id)arg2;
- (id)handleQueryWithUnboundKey:(id)arg1;
- (void)takeValuesFromDictionary:(id)arg1;
- (id)valuesForKeys:(id)arg1;
- (void)takeValue:(id)arg1 forKeyPath:(id)arg2;
- (id)_oldValueForKeyPath:(id)arg1;
- (const char *)_localClassNameForClass;
- (BOOL)_conformsToProtocolNamed:(const char *)arg1;
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
- (void)setObservation:(id)arg1 forObservingKeyPath:(id)arg2;
- (void)removeObservation:(id)arg1 forObservableKeyPath:(id)arg2;
- (id)addObserver:(id)arg1 forObservableKeyPath:(id)arg2;
- (void)_receiveBox:(id)arg1;
- (void)removeObservation:(id)arg1;
- (id)addObserver:(id)arg1;
- (void)receiveObservedValue:(id)arg1;
- (void)receiveObservedError:(id)arg1;
- (BOOL)_isToManyChangeInformation;
- (void)_destroyObserverList;
- (void *)_observerStorageOfSize:(unsigned long long)arg1;
- (id *)_observerStorage;
- (id)addObservationTransformer:(CDUnknownBlockType)arg1;
- (id)addObserverBlock:(CDUnknownBlockType)arg1;
- (id)addChainedObservers:(id)arg1;
- (void)finishObserving;
- (BOOL)_overrideUseFastBlockObservers;
- (void)setValuesForKeysWithDictionary:(id)arg1;
- (id)dictionaryWithValuesForKeys:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)mutableSetValueForKeyPath:(id)arg1;
- (id)mutableOrderedSetValueForKeyPath:(id)arg1;
- (id)mutableArrayValueForKeyPath:(id)arg1;
- (BOOL)validateValue:(inout id *)arg1 forKeyPath:(id)arg2 error:(out id *)arg3;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (id)valueForKeyPath:(id)arg1;
- (id)mutableSetValueForKey:(id)arg1;
- (id)mutableOrderedSetValueForKey:(id)arg1;
- (id)mutableArrayValueForKey:(id)arg1;
- (BOOL)validateValue:(inout id *)arg1 forKey:(id)arg2 error:(out id *)arg3;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (BOOL)_isKVOA;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)_removeObserver:(id)arg1 forProperty:(id)arg2;
- (void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)didChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;
- (void)willChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;
- (void)didChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)willChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)didChangeValueForKey:(id)arg1;
- (void)willChangeValueForKey:(id)arg1;
@property void *observationInfo;
- (id)_pendingChangeNotificationsArrayForKey:(id)arg1 create:(BOOL)arg2;
- (id)_implicitObservationInfo;
- (void)_changeValueForKey:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_changeValueForKey:(id)arg1 key:(id)arg2 key:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)_changeValueForKeys:(id *)arg1 count:(unsigned long long)arg2 maybeOldValuesDict:(id)arg3 maybeNewValuesDict:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (void)_notifyObserversOfChangeFromValuesForKeys:(id)arg1 toValuesForKeys:(id)arg2;
- (void)_didChangeValuesForKeys:(id)arg1;
- (void)_willChangeValuesForKeys:(id)arg1;
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;
- (void)_didEndKeyValueObserving;
- (void)_willBeginKeyValueObserving;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
@property(readonly) Class classForKeyedArchiver;
@property(readonly, retain) id autoContentAccessingProxy;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (id)copyScriptingValue:(id)arg1 forKey:(id)arg2 withProperties:(id)arg3;
- (id)_scriptingCopyWithProperties:(id)arg1 forValueForKey:(id)arg2 ofContainer:(id)arg3;
@property(copy) NSDictionary *scriptingProperties;
- (id)coerceValueForScriptingProperties:(id)arg1;
- (id)scriptingValueForSpecifier:(id)arg1;
- (void)_scriptingRemoveAllObjectsFromValueForKey:(id)arg1;
- (void)_scriptingRemoveObjectsAtIndexes:(id)arg1 fromValueForKey:(id)arg2;
- (id)_scriptingInsertObject:(id)arg1 inValueForKey:(id)arg2;
- (id)_scriptingReplaceObjectAtIndex:(unsigned long long)arg1 withObjects:(id)arg2 inValueForKey:(id)arg3;
- (id)_scriptingInsertObjects:(id)arg1 atIndexes:(id)arg2 inValueForKey:(id)arg3;
- (id)_scriptingAddObjectsFromSet:(id)arg1 toValueForKey:(id)arg2;
- (id)_scriptingAddObjectsFromArray:(id)arg1 toValueForKey:(id)arg2;
- (BOOL)_scriptingCanInsertBeforeOrReplaceObjectsAtIndexes:(id)arg1 inValueForKey:(id)arg2;
- (BOOL)_scriptingCanAddObjectsToValueForKey:(id)arg1;
- (id)_scriptingSetValue:(id)arg1 forKey:(id)arg2;
- (BOOL)_scriptingCanSetValue:(id)arg1 forSpecifier:(id)arg2;
- (id)_scriptingCoerceValue:(id)arg1 forKey:(id)arg2;
- (id)_scriptingSetOfObjectsForSpecifier:(id)arg1;
- (id)_scriptingArrayOfObjectsForSpecifier:(id)arg1;
- (id)_scriptingObjectForSpecifier:(id)arg1;
- (unsigned long long)_scriptingIndexOfObjectWithUniqueID:(id)arg1 inValueForKey:(id)arg2;
- (unsigned long long)_scriptingIndexOfObjectWithName:(id)arg1 inValueForKey:(id)arg2;
- (id)_scriptingObjectWithUniqueID:(id)arg1 inValueForKey:(id)arg2;
- (id)_scriptingObjectWithName:(id)arg1 inValueForKey:(id)arg2;
- (id)_scriptingObjectsAtIndexes:(id)arg1 inValueForKey:(id)arg2;
- (id)_scriptingObjectAtIndex:(unsigned long long)arg1 inValueForKey:(id)arg2;
- (BOOL)_scriptingShouldCheckObjectIndexes;
- (unsigned long long)_scriptingObjectCountInValueForKey:(id)arg1;
- (id)_scriptingValueForKey:(id)arg1;
- (long long *)_scriptingIndicesOfObjectsForSpecifier:(id)arg1 count:(long long *)arg2;
- (id)_scriptingIndexesOfObjectsForSpecifier:(id)arg1;
- (unsigned long long)_scriptingIndexOfObjectForSpecifier:(id)arg1;
- (id)_scriptingValueForSpecifier:(id)arg1;
- (id)_scriptingIndicesOfObjectsAfterValidatingSpecifier:(id)arg1;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
- (void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;
- (id)_scriptingDescriptorOfValueType:(id)arg1 orReasonWhyNot:(id *)arg2;
- (id)_scriptingDescriptorOfObjectType:(id)arg1 orReasonWhyNot:(id *)arg2;
- (id)_scriptingDescriptorOfEnumeratorType:(id)arg1 orReasonWhyNot:(id *)arg2;
- (id)_scriptingDescriptorOfComplexType:(id)arg1 orReasonWhyNot:(id *)arg2;
- (id)_scriptingDebugDescription;
- (int)_scriptingAlternativeValueRankWithDescriptor:(id)arg1;
@property(readonly, copy) NSString *className;
@property(readonly) unsigned int classCode;
- (void)_scriptingAddToReceiversArray:(id)arg1;
- (BOOL)_scriptingCanHandleCommand:(id)arg1;
- (BOOL)_scriptingMightHandleCommand:(id)arg1;
- (id)coerceValue:(id)arg1 forKey:(id)arg2;
- (void)insertValue:(id)arg1 inPropertyWithKey:(id)arg2;
- (void)removeValueAtIndex:(unsigned long long)arg1 fromPropertyWithKey:(id)arg2;
- (void)insertValue:(id)arg1 atIndex:(unsigned long long)arg2 inPropertyWithKey:(id)arg3;
- (void)replaceValueAtIndex:(unsigned long long)arg1 inPropertyWithKey:(id)arg2 withValue:(id)arg3;
- (id)valueWithUniqueID:(id)arg1 inPropertyWithKey:(id)arg2;
- (id)valueWithName:(id)arg1 inPropertyWithKey:(id)arg2;
- (id)valueAtIndex:(unsigned long long)arg1 inPropertyWithKey:(id)arg2;
- (long long)_supportsGetValueWithUniqueIDForKey:(id)arg1 perhapsByOverridingClass:(Class)arg2;
- (long long)_supportsGetValueWithNameForKey:(id)arg1 perhapsByOverridingClass:(Class)arg2;
- (void)_compatibility_takeValue:(id)arg1 forKey:(id)arg2;
- (id)_asScriptTerminologyNameString;
- (id)_asScriptTerminologyNameArray;
- (id)objectSpecifier;
- (id)_scriptingSetValue:(id)arg1 forSpecifier:(id)arg2;
- (BOOL)isCaseInsensitiveLike:(id)arg1;
- (BOOL)isLike:(id)arg1;
- (BOOL)doesContain:(id)arg1;
- (BOOL)isGreaterThan:(id)arg1;
- (BOOL)isGreaterThanOrEqualTo:(id)arg1;
- (BOOL)isLessThan:(id)arg1;
- (BOOL)isLessThanOrEqualTo:(id)arg1;
- (BOOL)isNotEqualTo:(id)arg1;
- (BOOL)isEqualTo:(id)arg1;
- (void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3 modes:(id)arg4;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4 modes:(id)arg5;
- (id)validateTakeValue:(id)arg1 forKeyPath:(id)arg2;
- (id)validateValue:(id *)arg1 forKey:(id)arg2;
- (void)takeStoredValuesFromDictionary:(id)arg1;
- (void)removeObject:(id)arg1 fromPropertyWithKey:(id)arg2;
- (void)removeObject:(id)arg1 fromBothSidesOfRelationshipWithKey:(id)arg2;
- (BOOL)ownsDestinationObjectsForRelationshipKey:(id)arg1;
- (BOOL)isToManyKey:(id)arg1;
- (void)flushKeyBindings;
- (id)entityName;
- (void)clearProperties;
- (id)classDescriptionForDestinationKey:(id)arg1;
- (id)allPropertyKeys;
- (void)addObject:(id)arg1 toPropertyWithKey:(id)arg2;
- (void)addObject:(id)arg1 toBothSidesOfRelationshipWithKey:(id)arg2;
- (void)_setObject:(id)arg1 forBothSidesOfRelationshipWithKey:(id)arg2;
- (BOOL)_scriptingExists;
- (id)replacementObjectForPortCoder:(id)arg1;
- (Class)classForPortCoder;
@end

